/******************************************************************************
*  Generated by PSoC Designer 5.0.1127.0
******************************************************************************/
#include <m8c.h>
/*
*   PSoCGPIOINT.h
*   Data: 04 June, 2002
*   Copyright (c) Cypress Semiconductor 2009. All Rights Reserved.
*
*  This file is generated by the Device Editor on Application Generation.
*  It contains equates that are useful in writing code relating to GPIO
*  related values.
*  
*  DO NOT EDIT THIS FILE MANUALLY, AS IT IS OVERWRITTEN!!!
*  Edits to this file will not be preserved.
*/
// FIFOP address and mask defines
#pragma	ioport	FIFOP_Data_ADDR:	0xc
BYTE			FIFOP_Data_ADDR;
#pragma	ioport	FIFOP_DriveMode_0_ADDR:	0x10c
BYTE			FIFOP_DriveMode_0_ADDR;
#pragma	ioport	FIFOP_DriveMode_1_ADDR:	0x10d
BYTE			FIFOP_DriveMode_1_ADDR;
#pragma	ioport	FIFOP_DriveMode_2_ADDR:	0xf
BYTE			FIFOP_DriveMode_2_ADDR;
#pragma	ioport	FIFOP_GlobalSelect_ADDR:	0xe
BYTE			FIFOP_GlobalSelect_ADDR;
#pragma	ioport	FIFOP_IntCtrl_0_ADDR:	0x10e
BYTE			FIFOP_IntCtrl_0_ADDR;
#pragma	ioport	FIFOP_IntCtrl_1_ADDR:	0x10f
BYTE			FIFOP_IntCtrl_1_ADDR;
#pragma	ioport	FIFOP_IntEn_ADDR:	0xd
BYTE			FIFOP_IntEn_ADDR;
#define FIFOP_MASK 0x80
// SWITCH address and mask defines
#pragma	ioport	SWITCH_Data_ADDR:	0x14
BYTE			SWITCH_Data_ADDR;
#pragma	ioport	SWITCH_DriveMode_0_ADDR:	0x114
BYTE			SWITCH_DriveMode_0_ADDR;
#pragma	ioport	SWITCH_DriveMode_1_ADDR:	0x115
BYTE			SWITCH_DriveMode_1_ADDR;
#pragma	ioport	SWITCH_DriveMode_2_ADDR:	0x17
BYTE			SWITCH_DriveMode_2_ADDR;
#pragma	ioport	SWITCH_GlobalSelect_ADDR:	0x16
BYTE			SWITCH_GlobalSelect_ADDR;
#pragma	ioport	SWITCH_IntCtrl_0_ADDR:	0x116
BYTE			SWITCH_IntCtrl_0_ADDR;
#pragma	ioport	SWITCH_IntCtrl_1_ADDR:	0x117
BYTE			SWITCH_IntCtrl_1_ADDR;
#pragma	ioport	SWITCH_IntEn_ADDR:	0x15
BYTE			SWITCH_IntEn_ADDR;
#define SWITCH_MASK 0x8
// ResetN address and mask defines
#pragma	ioport	ResetN_Data_ADDR:	0x4
BYTE			ResetN_Data_ADDR;
#pragma	ioport	ResetN_DriveMode_0_ADDR:	0x104
BYTE			ResetN_DriveMode_0_ADDR;
#pragma	ioport	ResetN_DriveMode_1_ADDR:	0x105
BYTE			ResetN_DriveMode_1_ADDR;
#pragma	ioport	ResetN_DriveMode_2_ADDR:	0x7
BYTE			ResetN_DriveMode_2_ADDR;
#pragma	ioport	ResetN_GlobalSelect_ADDR:	0x6
BYTE			ResetN_GlobalSelect_ADDR;
#pragma	ioport	ResetN_IntCtrl_0_ADDR:	0x106
BYTE			ResetN_IntCtrl_0_ADDR;
#pragma	ioport	ResetN_IntCtrl_1_ADDR:	0x107
BYTE			ResetN_IntCtrl_1_ADDR;
#pragma	ioport	ResetN_IntEn_ADDR:	0x5
BYTE			ResetN_IntEn_ADDR;
#define ResetN_MASK 0x8
// SCLK address and mask defines
#pragma	ioport	SCLK_Data_ADDR:	0xc
BYTE			SCLK_Data_ADDR;
#pragma	ioport	SCLK_DriveMode_0_ADDR:	0x10c
BYTE			SCLK_DriveMode_0_ADDR;
#pragma	ioport	SCLK_DriveMode_1_ADDR:	0x10d
BYTE			SCLK_DriveMode_1_ADDR;
#pragma	ioport	SCLK_DriveMode_2_ADDR:	0xf
BYTE			SCLK_DriveMode_2_ADDR;
#pragma	ioport	SCLK_GlobalSelect_ADDR:	0xe
BYTE			SCLK_GlobalSelect_ADDR;
#pragma	ioport	SCLK_IntCtrl_0_ADDR:	0x10e
BYTE			SCLK_IntCtrl_0_ADDR;
#pragma	ioport	SCLK_IntCtrl_1_ADDR:	0x10f
BYTE			SCLK_IntCtrl_1_ADDR;
#pragma	ioport	SCLK_IntEn_ADDR:	0xd
BYTE			SCLK_IntEn_ADDR;
#define SCLK_MASK 0x1
// FIFO address and mask defines
#pragma	ioport	FIFO_Data_ADDR:	0xc
BYTE			FIFO_Data_ADDR;
#pragma	ioport	FIFO_DriveMode_0_ADDR:	0x10c
BYTE			FIFO_DriveMode_0_ADDR;
#pragma	ioport	FIFO_DriveMode_1_ADDR:	0x10d
BYTE			FIFO_DriveMode_1_ADDR;
#pragma	ioport	FIFO_DriveMode_2_ADDR:	0xf
BYTE			FIFO_DriveMode_2_ADDR;
#pragma	ioport	FIFO_GlobalSelect_ADDR:	0xe
BYTE			FIFO_GlobalSelect_ADDR;
#pragma	ioport	FIFO_IntCtrl_0_ADDR:	0x10e
BYTE			FIFO_IntCtrl_0_ADDR;
#pragma	ioport	FIFO_IntCtrl_1_ADDR:	0x10f
BYTE			FIFO_IntCtrl_1_ADDR;
#pragma	ioport	FIFO_IntEn_ADDR:	0xd
BYTE			FIFO_IntEn_ADDR;
#define FIFO_MASK 0x2
// MOSI address and mask defines
#pragma	ioport	MOSI_Data_ADDR:	0xc
BYTE			MOSI_Data_ADDR;
#pragma	ioport	MOSI_DriveMode_0_ADDR:	0x10c
BYTE			MOSI_DriveMode_0_ADDR;
#pragma	ioport	MOSI_DriveMode_1_ADDR:	0x10d
BYTE			MOSI_DriveMode_1_ADDR;
#pragma	ioport	MOSI_DriveMode_2_ADDR:	0xf
BYTE			MOSI_DriveMode_2_ADDR;
#pragma	ioport	MOSI_GlobalSelect_ADDR:	0xe
BYTE			MOSI_GlobalSelect_ADDR;
#pragma	ioport	MOSI_IntCtrl_0_ADDR:	0x10e
BYTE			MOSI_IntCtrl_0_ADDR;
#pragma	ioport	MOSI_IntCtrl_1_ADDR:	0x10f
BYTE			MOSI_IntCtrl_1_ADDR;
#pragma	ioport	MOSI_IntEn_ADDR:	0xd
BYTE			MOSI_IntEn_ADDR;
#define MOSI_MASK 0x4
// SFD address and mask defines
#pragma	ioport	SFD_Data_ADDR:	0xc
BYTE			SFD_Data_ADDR;
#pragma	ioport	SFD_DriveMode_0_ADDR:	0x10c
BYTE			SFD_DriveMode_0_ADDR;
#pragma	ioport	SFD_DriveMode_1_ADDR:	0x10d
BYTE			SFD_DriveMode_1_ADDR;
#pragma	ioport	SFD_DriveMode_2_ADDR:	0xf
BYTE			SFD_DriveMode_2_ADDR;
#pragma	ioport	SFD_GlobalSelect_ADDR:	0xe
BYTE			SFD_GlobalSelect_ADDR;
#pragma	ioport	SFD_IntCtrl_0_ADDR:	0x10e
BYTE			SFD_IntCtrl_0_ADDR;
#pragma	ioport	SFD_IntCtrl_1_ADDR:	0x10f
BYTE			SFD_IntCtrl_1_ADDR;
#pragma	ioport	SFD_IntEn_ADDR:	0xd
BYTE			SFD_IntEn_ADDR;
#define SFD_MASK 0x8
// MISO address and mask defines
#pragma	ioport	MISO_Data_ADDR:	0xc
BYTE			MISO_Data_ADDR;
#pragma	ioport	MISO_DriveMode_0_ADDR:	0x10c
BYTE			MISO_DriveMode_0_ADDR;
#pragma	ioport	MISO_DriveMode_1_ADDR:	0x10d
BYTE			MISO_DriveMode_1_ADDR;
#pragma	ioport	MISO_DriveMode_2_ADDR:	0xf
BYTE			MISO_DriveMode_2_ADDR;
#pragma	ioport	MISO_GlobalSelect_ADDR:	0xe
BYTE			MISO_GlobalSelect_ADDR;
#pragma	ioport	MISO_IntCtrl_0_ADDR:	0x10e
BYTE			MISO_IntCtrl_0_ADDR;
#pragma	ioport	MISO_IntCtrl_1_ADDR:	0x10f
BYTE			MISO_IntCtrl_1_ADDR;
#pragma	ioport	MISO_IntEn_ADDR:	0xd
BYTE			MISO_IntEn_ADDR;
#define MISO_MASK 0x10
// CCA address and mask defines
#pragma	ioport	CCA_Data_ADDR:	0xc
BYTE			CCA_Data_ADDR;
#pragma	ioport	CCA_DriveMode_0_ADDR:	0x10c
BYTE			CCA_DriveMode_0_ADDR;
#pragma	ioport	CCA_DriveMode_1_ADDR:	0x10d
BYTE			CCA_DriveMode_1_ADDR;
#pragma	ioport	CCA_DriveMode_2_ADDR:	0xf
BYTE			CCA_DriveMode_2_ADDR;
#pragma	ioport	CCA_GlobalSelect_ADDR:	0xe
BYTE			CCA_GlobalSelect_ADDR;
#pragma	ioport	CCA_IntCtrl_0_ADDR:	0x10e
BYTE			CCA_IntCtrl_0_ADDR;
#pragma	ioport	CCA_IntCtrl_1_ADDR:	0x10f
BYTE			CCA_IntCtrl_1_ADDR;
#pragma	ioport	CCA_IntEn_ADDR:	0xd
BYTE			CCA_IntEn_ADDR;
#define CCA_MASK 0x20
// CSn address and mask defines
#pragma	ioport	CSn_Data_ADDR:	0x10
BYTE			CSn_Data_ADDR;
#pragma	ioport	CSn_DriveMode_0_ADDR:	0x110
BYTE			CSn_DriveMode_0_ADDR;
#pragma	ioport	CSn_DriveMode_1_ADDR:	0x111
BYTE			CSn_DriveMode_1_ADDR;
#pragma	ioport	CSn_DriveMode_2_ADDR:	0x13
BYTE			CSn_DriveMode_2_ADDR;
#pragma	ioport	CSn_GlobalSelect_ADDR:	0x12
BYTE			CSn_GlobalSelect_ADDR;
#pragma	ioport	CSn_IntCtrl_0_ADDR:	0x112
BYTE			CSn_IntCtrl_0_ADDR;
#pragma	ioport	CSn_IntCtrl_1_ADDR:	0x113
BYTE			CSn_IntCtrl_1_ADDR;
#pragma	ioport	CSn_IntEn_ADDR:	0x11
BYTE			CSn_IntEn_ADDR;
#define CSn_MASK 0x2
// LED_RED address and mask defines
#pragma	ioport	LED_RED_Data_ADDR:	0x14
BYTE			LED_RED_Data_ADDR;
#pragma	ioport	LED_RED_DriveMode_0_ADDR:	0x114
BYTE			LED_RED_DriveMode_0_ADDR;
#pragma	ioport	LED_RED_DriveMode_1_ADDR:	0x115
BYTE			LED_RED_DriveMode_1_ADDR;
#pragma	ioport	LED_RED_DriveMode_2_ADDR:	0x17
BYTE			LED_RED_DriveMode_2_ADDR;
#pragma	ioport	LED_RED_GlobalSelect_ADDR:	0x16
BYTE			LED_RED_GlobalSelect_ADDR;
#pragma	ioport	LED_RED_IntCtrl_0_ADDR:	0x116
BYTE			LED_RED_IntCtrl_0_ADDR;
#pragma	ioport	LED_RED_IntCtrl_1_ADDR:	0x117
BYTE			LED_RED_IntCtrl_1_ADDR;
#pragma	ioport	LED_RED_IntEn_ADDR:	0x15
BYTE			LED_RED_IntEn_ADDR;
#define LED_RED_MASK 0x1
// LED_BLUE address and mask defines
#pragma	ioport	LED_BLUE_Data_ADDR:	0x14
BYTE			LED_BLUE_Data_ADDR;
#pragma	ioport	LED_BLUE_DriveMode_0_ADDR:	0x114
BYTE			LED_BLUE_DriveMode_0_ADDR;
#pragma	ioport	LED_BLUE_DriveMode_1_ADDR:	0x115
BYTE			LED_BLUE_DriveMode_1_ADDR;
#pragma	ioport	LED_BLUE_DriveMode_2_ADDR:	0x17
BYTE			LED_BLUE_DriveMode_2_ADDR;
#pragma	ioport	LED_BLUE_GlobalSelect_ADDR:	0x16
BYTE			LED_BLUE_GlobalSelect_ADDR;
#pragma	ioport	LED_BLUE_IntCtrl_0_ADDR:	0x116
BYTE			LED_BLUE_IntCtrl_0_ADDR;
#pragma	ioport	LED_BLUE_IntCtrl_1_ADDR:	0x117
BYTE			LED_BLUE_IntCtrl_1_ADDR;
#pragma	ioport	LED_BLUE_IntEn_ADDR:	0x15
BYTE			LED_BLUE_IntEn_ADDR;
#define LED_BLUE_MASK 0x2
// LED_GREEN address and mask defines
#pragma	ioport	LED_GREEN_Data_ADDR:	0x14
BYTE			LED_GREEN_Data_ADDR;
#pragma	ioport	LED_GREEN_DriveMode_0_ADDR:	0x114
BYTE			LED_GREEN_DriveMode_0_ADDR;
#pragma	ioport	LED_GREEN_DriveMode_1_ADDR:	0x115
BYTE			LED_GREEN_DriveMode_1_ADDR;
#pragma	ioport	LED_GREEN_DriveMode_2_ADDR:	0x17
BYTE			LED_GREEN_DriveMode_2_ADDR;
#pragma	ioport	LED_GREEN_GlobalSelect_ADDR:	0x16
BYTE			LED_GREEN_GlobalSelect_ADDR;
#pragma	ioport	LED_GREEN_IntCtrl_0_ADDR:	0x116
BYTE			LED_GREEN_IntCtrl_0_ADDR;
#pragma	ioport	LED_GREEN_IntCtrl_1_ADDR:	0x117
BYTE			LED_GREEN_IntCtrl_1_ADDR;
#pragma	ioport	LED_GREEN_IntEn_ADDR:	0x15
BYTE			LED_GREEN_IntEn_ADDR;
#define LED_GREEN_MASK 0x4
