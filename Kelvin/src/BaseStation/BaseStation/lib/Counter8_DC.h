//*****************************************************************************
//*****************************************************************************
//  FILENAME: Counter8_DC.h
//   Version: 2.5, Updated on 2009/10/15 at 17:11:37
//  Generated by PSoC Designer 5.0.1127.0
//
//  DESCRIPTION: Counter8 User Module C Language interface file
//-----------------------------------------------------------------------------
//  Copyright (c) Cypress Semiconductor 2009. All Rights Reserved.
//*****************************************************************************
//*****************************************************************************

#include <m8c.h>

#pragma fastcall16 Counter8_DC_EnableInt
#pragma fastcall16 Counter8_DC_DisableInt
#pragma fastcall16 Counter8_DC_Start
#pragma fastcall16 Counter8_DC_Stop
#pragma fastcall16 Counter8_DC_bReadCounter              // Read  DR0
#pragma fastcall16 Counter8_DC_WritePeriod               // Write DR1
#pragma fastcall16 Counter8_DC_bReadCompareValue         // Read  DR2
#pragma fastcall16 Counter8_DC_WriteCompareValue         // Write DR2

// The following symbols are deprecated.
// They may be omitted in future releases
//
#pragma fastcall16 bCounter8_DC_ReadCounter              // Read  DR0 (Deprecated)
#pragma fastcall16 bCounter8_DC_ReadCompareValue         // Read  DR2 (Deprecated)


//-------------------------------------------------
// Prototypes of the Counter8_DC API.
//-------------------------------------------------

extern void Counter8_DC_EnableInt(void);                           // Proxy Class 1
extern void Counter8_DC_DisableInt(void);                          // Proxy Class 1
extern void Counter8_DC_Start(void);                               // Proxy Class 1
extern void Counter8_DC_Stop(void);                                // Proxy Class 1
extern BYTE Counter8_DC_bReadCounter(void);                        // Proxy Class 1
extern void Counter8_DC_WritePeriod(BYTE bPeriod);                 // Proxy Class 1
extern BYTE Counter8_DC_bReadCompareValue(void);                   // Proxy Class 2
extern void Counter8_DC_WriteCompareValue(BYTE bCompareValue);     // Proxy Class 1

// The following functions are deprecated.
// They may be omitted in future releases
//
extern BYTE bCounter8_DC_ReadCounter(void);            // Deprecated
extern BYTE bCounter8_DC_ReadCompareValue(void);       // Deprecated


//--------------------------------------------------
// Constants for Counter8_DC API's.
//--------------------------------------------------

#define Counter8_DC_CONTROL_REG_START_BIT      ( 0x01 )
#define Counter8_DC_INT_REG_ADDR               ( 0x0df )
#define Counter8_DC_INT_MASK                   ( 0x10 )


//--------------------------------------------------
// Constants for Counter8_DC user defined values
//--------------------------------------------------

#define Counter8_DC_PERIOD                     ( 0x08 )
#define Counter8_DC_COMPARE_VALUE              ( 0x08 )


//-------------------------------------------------
// Register Addresses for Counter8_DC
//-------------------------------------------------

#pragma ioport  Counter8_DC_COUNTER_REG:    0x050          //DR0 Count register
BYTE            Counter8_DC_COUNTER_REG;
#pragma ioport  Counter8_DC_PERIOD_REG: 0x051              //DR1 Period register
BYTE            Counter8_DC_PERIOD_REG;
#pragma ioport  Counter8_DC_COMPARE_REG:    0x052          //DR2 Compare register
BYTE            Counter8_DC_COMPARE_REG;
#pragma ioport  Counter8_DC_CONTROL_REG:    0x053          //Control register
BYTE            Counter8_DC_CONTROL_REG;
#pragma ioport  Counter8_DC_FUNC_REG:   0x150              //Function register
BYTE            Counter8_DC_FUNC_REG;
#pragma ioport  Counter8_DC_INPUT_REG:  0x151              //Input register
BYTE            Counter8_DC_INPUT_REG;
#pragma ioport  Counter8_DC_OUTPUT_REG: 0x152              //Output register
BYTE            Counter8_DC_OUTPUT_REG;
#pragma ioport  Counter8_DC_INT_REG:       0x0df           //Interrupt Mask Register
BYTE            Counter8_DC_INT_REG;


//-------------------------------------------------
// Counter8_DC Macro 'Functions'
//-------------------------------------------------

#define Counter8_DC_Start_M \
   Counter8_DC_CONTROL_REG |=  Counter8_DC_CONTROL_REG_START_BIT

#define Counter8_DC_Stop_M  \
   Counter8_DC_CONTROL_REG &= ~Counter8_DC_CONTROL_REG_START_BIT

#define Counter8_DC_EnableInt_M   \
   M8C_EnableIntMask(Counter8_DC_INT_REG, Counter8_DC_INT_MASK)

#define Counter8_DC_DisableInt_M  \
   M8C_DisableIntMask(Counter8_DC_INT_REG, Counter8_DC_INT_MASK)


// end of file Counter8_DC.h
